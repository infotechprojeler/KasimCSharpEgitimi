<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>